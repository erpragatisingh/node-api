{
  "{\"sourceRoot\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"filename\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"plugins\":[],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst cors = require('cors');\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst morgan = require('morgan');\n\nconst router = require('./routes/route');\n\nconst app = express();\napp.use(cors());\n\nconst swaggerUi = require('swagger-ui-express'),\n      swaggerDocument = require('./swagger.json'); // parse application/x-www-form-urlencoded\n\n\napp.use(bodyParser.urlencoded({\n  extended: false\n})); // parse application/json\n\napp.use(bodyParser.json());\napp.use(morgan('dev')); // create a write stream (in append mode)\n\nvar accessLogStream = fs.createWriteStream(path.join(__dirname, '/logs/access.log'), {\n  flags: 'a'\n}); // setup the logger\n\napp.use(morgan('combined', {\n  stream: accessLogStream\n}));\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\napp.use(router);\nconst port = 3000;\napp.listen(process.env.PORT || port, err => {\n  if (err) console.log('Unable to start the server!');else console.log('Server started running on : ' + port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJjb3JzIiwiZnMiLCJwYXRoIiwibW9yZ2FuIiwicm91dGVyIiwiYXBwIiwidXNlIiwic3dhZ2dlclVpIiwic3dhZ2dlckRvY3VtZW50IiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImFjY2Vzc0xvZ1N0cmVhbSIsImNyZWF0ZVdyaXRlU3RyZWFtIiwiam9pbiIsIl9fZGlybmFtZSIsImZsYWdzIiwic3RyZWFtIiwic2VydmUiLCJzZXR1cCIsInBvcnQiLCJsaXN0ZW4iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1HLEVBQUUsR0FBR0gsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsTUFBTUksSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNSyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1NLE1BQU0sR0FBR04sT0FBTyxDQUFDLGdCQUFELENBQXRCOztBQUNBLE1BQU1PLEdBQUcsR0FBR1IsT0FBTyxFQUFuQjtBQUVBUSxHQUFHLENBQUNDLEdBQUosQ0FBUU4sSUFBSSxFQUFaOztBQUVBLE1BQU1PLFNBQVMsR0FBR1QsT0FBTyxDQUFDLG9CQUFELENBQXpCO0FBQUEsTUFDQVUsZUFBZSxHQUFHVixPQUFPLENBQUMsZ0JBQUQsQ0FEekIsQyxDQUtBOzs7QUFDQU8sR0FBRyxDQUFDQyxHQUFKLENBQVFQLFVBQVUsQ0FBQ1UsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSLEUsQ0FFQTs7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVFQLFVBQVUsQ0FBQ1ksSUFBWCxFQUFSO0FBRUFOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxNQUFNLENBQUMsS0FBRCxDQUFkLEUsQ0FFQTs7QUFDQSxJQUFJUyxlQUFlLEdBQUdYLEVBQUUsQ0FBQ1ksaUJBQUgsQ0FBcUJYLElBQUksQ0FBQ1ksSUFBTCxDQUFVQyxTQUFWLEVBQXFCLGtCQUFyQixDQUFyQixFQUErRDtBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUEvRCxDQUF0QixDLENBRUE7O0FBQ0FYLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxNQUFNLENBQUMsVUFBRCxFQUFhO0FBQUVjLEVBQUFBLE1BQU0sRUFBRUw7QUFBVixDQUFiLENBQWQ7QUFDQVAsR0FBRyxDQUFDQyxHQUFKLENBQVEsV0FBUixFQUFxQkMsU0FBUyxDQUFDVyxLQUEvQixFQUFzQ1gsU0FBUyxDQUFDWSxLQUFWLENBQWdCWCxlQUFoQixDQUF0QztBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUUYsTUFBUjtBQUVBLE1BQU1nQixJQUFJLEdBQUcsSUFBYjtBQUVBZixHQUFHLENBQUNnQixNQUFKLENBQVdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CSixJQUEvQixFQUF1Q0ssR0FBRCxJQUFTO0FBQzdDLE1BQUdBLEdBQUgsRUFDRkMsT0FBTyxDQUFDQyxHQUFSLENBQVksNkJBQVosRUFERSxLQUdGRCxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQ0FBaUNQLElBQTdDO0FBQ0MsQ0FMRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxwXFxEb2N1bWVudHNcXE5PREVfREVWXFxub2RlLWFwaWdpdFxcc2FtcGxlLUNSVUQtU1FMXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcblxyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKVxyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpXHJcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxyXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXHJcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpXHJcbmNvbnN0IHJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL3JvdXRlJylcclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcblxyXG5hcHAudXNlKGNvcnMoKSlcclxuXHJcbmNvbnN0IHN3YWdnZXJVaSA9IHJlcXVpcmUoJ3N3YWdnZXItdWktZXhwcmVzcycpLFxyXG5zd2FnZ2VyRG9jdW1lbnQgPSByZXF1aXJlKCcuL3N3YWdnZXIuanNvbicpO1xyXG5cclxuXHJcblxyXG4vLyBwYXJzZSBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcclxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpXHJcblxyXG4vLyBwYXJzZSBhcHBsaWNhdGlvbi9qc29uXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXHJcblxyXG5hcHAudXNlKG1vcmdhbignZGV2JykpXHJcblxyXG4vLyBjcmVhdGUgYSB3cml0ZSBzdHJlYW0gKGluIGFwcGVuZCBtb2RlKVxyXG52YXIgYWNjZXNzTG9nU3RyZWFtID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0ocGF0aC5qb2luKF9fZGlybmFtZSwgJy9sb2dzL2FjY2Vzcy5sb2cnKSwgeyBmbGFnczogJ2EnIH0pXHJcbiBcclxuLy8gc2V0dXAgdGhlIGxvZ2dlclxyXG5hcHAudXNlKG1vcmdhbignY29tYmluZWQnLCB7IHN0cmVhbTogYWNjZXNzTG9nU3RyZWFtIH0pKVxyXG5hcHAudXNlKCcvYXBpLWRvY3MnLCBzd2FnZ2VyVWkuc2VydmUsIHN3YWdnZXJVaS5zZXR1cChzd2FnZ2VyRG9jdW1lbnQpKTtcclxuYXBwLnVzZShyb3V0ZXIpXHJcblxyXG5jb25zdCBwb3J0ID0gMzAwMFxyXG5cclxuYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUIHx8IHBvcnQgLCAoZXJyKSA9PiB7XHJcbiAgaWYoZXJyKVxyXG5jb25zb2xlLmxvZygnVW5hYmxlIHRvIHN0YXJ0IHRoZSBzZXJ2ZXIhJylcclxuZWxzZVxyXG5jb25zb2xlLmxvZygnU2VydmVyIHN0YXJ0ZWQgcnVubmluZyBvbiA6ICcgKyBwb3J0KVxyXG59KVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "cors",
        "fs",
        "path",
        "morgan",
        "router",
        "app",
        "use",
        "swaggerUi",
        "swaggerDocument",
        "urlencoded",
        "extended",
        "json",
        "accessLogStream",
        "createWriteStream",
        "join",
        "__dirname",
        "flags",
        "stream",
        "serve",
        "setup",
        "port",
        "listen",
        "process",
        "env",
        "PORT",
        "err",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAMO,GAAG,GAAGR,OAAO,EAAnB;AAEAQ,GAAG,CAACC,GAAJ,CAAQN,IAAI,EAAZ;;AAEA,MAAMO,SAAS,GAAGT,OAAO,CAAC,oBAAD,CAAzB;AAAA,MACAU,eAAe,GAAGV,OAAO,CAAC,gBAAD,CADzB,C,CAKA;;;AACAO,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACU,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAL,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACY,IAAX,EAAR;AAEAN,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,KAAD,CAAd,E,CAEA;;AACA,IAAIS,eAAe,GAAGX,EAAE,CAACY,iBAAH,CAAqBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,kBAArB,CAArB,EAA+D;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA/D,CAAtB,C,CAEA;;AACAX,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,UAAD,EAAa;AAAEc,EAAAA,MAAM,EAAEL;AAAV,CAAb,CAAd;AACAP,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBC,SAAS,CAACW,KAA/B,EAAsCX,SAAS,CAACY,KAAV,CAAgBX,eAAhB,CAAtC;AACAH,GAAG,CAACC,GAAJ,CAAQF,MAAR;AAEA,MAAMgB,IAAI,GAAG,IAAb;AAEAf,GAAG,CAACgB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBJ,IAA/B,EAAuCK,GAAD,IAAS;AAC7C,MAAGA,GAAH,EACFC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EADE,KAGFD,OAAO,CAACC,GAAR,CAAY,iCAAiCP,IAA7C;AACC,CALD",
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\",
      "sourcesContent": [
        "const express = require('express')\r\n\r\nconst bodyParser = require('body-parser')\r\nconst cors = require('cors')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\nconst morgan = require('morgan')\r\nconst router = require('./routes/route')\r\nconst app = express()\r\n\r\napp.use(cors())\r\n\r\nconst swaggerUi = require('swagger-ui-express'),\r\nswaggerDocument = require('./swagger.json');\r\n\r\n\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// parse application/json\r\napp.use(bodyParser.json())\r\n\r\napp.use(morgan('dev'))\r\n\r\n// create a write stream (in append mode)\r\nvar accessLogStream = fs.createWriteStream(path.join(__dirname, '/logs/access.log'), { flags: 'a' })\r\n \r\n// setup the logger\r\napp.use(morgan('combined', { stream: accessLogStream }))\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\r\napp.use(router)\r\n\r\nconst port = 3000\r\n\r\napp.listen(process.env.PORT || port , (err) => {\r\n  if(err)\r\nconsole.log('Unable to start the server!')\r\nelse\r\nconsole.log('Server started running on : ' + port)\r\n})\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1607348053955
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"filename\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\routes\\\\route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"plugins\":[],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\route.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\",
        "sourceFileName": "route.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst controller = require('../controller/controller');\n\nconst router = express.Router();\nrouter.get('/api/getAllData', controller.getAllData);\nrouter.post('/api/addNewData', controller.addNewData);\nrouter.put('/api/updateData', controller.updateData);\nrouter.delete('/api/deleteData', controller.deleteData);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY29udHJvbGxlciIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImdldEFsbERhdGEiLCJwb3N0IiwiYWRkTmV3RGF0YSIsInB1dCIsInVwZGF0ZURhdGEiLCJkZWxldGUiLCJkZWxldGVEYXRhIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFJQyxPQUFPLENBQUMsU0FBRCxDQUF4Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQywwQkFBRCxDQUExQjs7QUFFQSxNQUFNRSxNQUFNLEdBQUdILE9BQU8sQ0FBQ0ksTUFBUixFQUFmO0FBQ0FELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLGlCQUFYLEVBQThCSCxVQUFVLENBQUNJLFVBQXpDO0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLGlCQUFaLEVBQWdDTCxVQUFVLENBQUNNLFVBQTNDO0FBQ0FMLE1BQU0sQ0FBQ00sR0FBUCxDQUFXLGlCQUFYLEVBQTZCUCxVQUFVLENBQUNRLFVBQXhDO0FBQ0FQLE1BQU0sQ0FBQ1EsTUFBUCxDQUFjLGlCQUFkLEVBQWtDVCxVQUFVLENBQUNVLFVBQTdDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlgsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxscFxcRG9jdW1lbnRzXFxOT0RFX0RFVlxcbm9kZS1hcGlnaXRcXHNhbXBsZS1DUlVELVNRTFxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gIHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgY29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXIvY29udHJvbGxlcicpXHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5yb3V0ZXIuZ2V0KCcvYXBpL2dldEFsbERhdGEnLCBjb250cm9sbGVyLmdldEFsbERhdGEpO1xyXG5yb3V0ZXIucG9zdCgnL2FwaS9hZGROZXdEYXRhJyAsIGNvbnRyb2xsZXIuYWRkTmV3RGF0YSk7XHJcbnJvdXRlci5wdXQoJy9hcGkvdXBkYXRlRGF0YScsY29udHJvbGxlci51cGRhdGVEYXRhKTtcclxucm91dGVyLmRlbGV0ZSgnL2FwaS9kZWxldGVEYXRhJyAsIGNvbnRyb2xsZXIuZGVsZXRlRGF0YSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "route.js"
      ],
      "names": [
        "express",
        "require",
        "controller",
        "router",
        "Router",
        "get",
        "getAllData",
        "post",
        "addNewData",
        "put",
        "updateData",
        "delete",
        "deleteData",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAIC,OAAO,CAAC,SAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,0BAAD,CAA1B;;AAEA,MAAME,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf;AACAD,MAAM,CAACE,GAAP,CAAW,iBAAX,EAA8BH,UAAU,CAACI,UAAzC;AACAH,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAAgCL,UAAU,CAACM,UAA3C;AACAL,MAAM,CAACM,GAAP,CAAW,iBAAX,EAA6BP,UAAU,CAACQ,UAAxC;AACAP,MAAM,CAACQ,MAAP,CAAc,iBAAd,EAAkCT,UAAU,CAACU,UAA7C;AAEAC,MAAM,CAACC,OAAP,GAAiBX,MAAjB",
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\",
      "sourcesContent": [
        "const express =  require('express');\r\nconst controller = require('../controller/controller')\r\n\r\nconst router = express.Router();\r\nrouter.get('/api/getAllData', controller.getAllData);\r\nrouter.post('/api/addNewData' , controller.addNewData);\r\nrouter.put('/api/updateData',controller.updateData);\r\nrouter.delete('/api/deleteData' , controller.deleteData);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1607157707593
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"filename\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\controller\\\\controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\controller\\controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\controller\\controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\controller\\controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\controller\\",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('../database/db'),\n    sql = _require.sql,\n    poolPromise = _require.poolPromise;\n\nvar fs = require('fs');\n\nvar rawdata = fs.readFileSync('./query/queries.json');\nvar queries = JSON.parse(rawdata);\n\nvar MainController = /*#__PURE__*/function () {\n  function MainController() {\n    _classCallCheck(this, MainController);\n  }\n\n  _createClass(MainController, [{\n    key: \"getAllData\",\n    value: function () {\n      var _getAllData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n        var pool, result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return poolPromise;\n\n              case 3:\n                pool = _context.sent;\n                _context.next = 6;\n                return pool.request().query(queries.getAllData);\n\n              case 6:\n                result = _context.sent;\n                res.json(result.recordset);\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                res.status(500);\n                res.send(_context.t0.message);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      function getAllData(_x, _x2) {\n        return _getAllData.apply(this, arguments);\n      }\n\n      return getAllData;\n    }()\n  }, {\n    key: \"addNewData\",\n    value: function () {\n      var _addNewData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n        var pool, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (!(req.body.name != null && req.body.email != null && req.body.password != null)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 4;\n                return poolPromise;\n\n              case 4:\n                pool = _context2.sent;\n                _context2.next = 7;\n                return pool.request().input('user', sql.VarChar, req.body.name).input('email', sql.VarChar, req.body.email).input('password', sql.VarChar, req.body.password).query(queries.addNewUser);\n\n              case 7:\n                result = _context2.sent;\n                res.json(result);\n                _context2.next = 12;\n                break;\n\n              case 11:\n                res.send('Please fill all the details!');\n\n              case 12:\n                _context2.next = 18;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](0);\n                res.status(500);\n                res.send(_context2.t0.message);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 14]]);\n      }));\n\n      function addNewData(_x3, _x4) {\n        return _addNewData.apply(this, arguments);\n      }\n\n      return addNewData;\n    }()\n  }, {\n    key: \"updateData\",\n    value: function () {\n      var _updateData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n        var pool, result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n\n                if (!(req.body.password != null && req.body.name != null)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 4;\n                return poolPromise;\n\n              case 4:\n                pool = _context3.sent;\n                _context3.next = 7;\n                return pool.request().input('newPassword', sql.VarChar, req.body.password).input('userName', sql.VarChar, req.body.name).query(queries.updateUserDetails);\n\n              case 7:\n                result = _context3.sent;\n                res.json(result);\n                _context3.next = 12;\n                break;\n\n              case 11:\n                res.send('All fields are required!');\n\n              case 12:\n                _context3.next = 18;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](0);\n                res.status(500);\n                res.send(_context3.t0.message);\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 14]]);\n      }));\n\n      function updateData(_x5, _x6) {\n        return _updateData.apply(this, arguments);\n      }\n\n      return updateData;\n    }()\n  }, {\n    key: \"deleteData\",\n    value: function () {\n      var _deleteData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n        var pool, result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n\n                if (!(req.body.name != null)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                _context4.next = 4;\n                return poolPromise;\n\n              case 4:\n                pool = _context4.sent;\n                _context4.next = 7;\n                return pool.request().input('userName', sql.VarChar, req.body.name).query(queries.deleteUser);\n\n              case 7:\n                result = _context4.sent;\n                res.json(result);\n                _context4.next = 12;\n                break;\n\n              case 11:\n                res.send('Please fill all the details!');\n\n              case 12:\n                _context4.next = 18;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](0);\n                res.status(500);\n                res.send(_context4.t0.message);\n\n              case 18:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 14]]);\n      }));\n\n      function deleteData(_x7, _x8) {\n        return _deleteData.apply(this, arguments);\n      }\n\n      return deleteData;\n    }()\n  }]);\n\n  return MainController;\n}();\n\nvar controller = new MainController();\nmodule.exports = controller;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInNxbCIsInBvb2xQcm9taXNlIiwiZnMiLCJyYXdkYXRhIiwicmVhZEZpbGVTeW5jIiwicXVlcmllcyIsIkpTT04iLCJwYXJzZSIsIk1haW5Db250cm9sbGVyIiwicmVxIiwicmVzIiwicG9vbCIsInJlcXVlc3QiLCJxdWVyeSIsImdldEFsbERhdGEiLCJyZXN1bHQiLCJqc29uIiwicmVjb3Jkc2V0Iiwic3RhdHVzIiwic2VuZCIsIm1lc3NhZ2UiLCJib2R5IiwibmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJpbnB1dCIsIlZhckNoYXIiLCJhZGROZXdVc2VyIiwidXBkYXRlVXNlckRldGFpbHMiLCJkZWxldGVVc2VyIiwiY29udHJvbGxlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7O2VBRTRCQSxPQUFPLENBQUMsZ0JBQUQsQztJQUEzQkMsRyxZQUFBQSxHO0lBQUlDLFcsWUFBQUEsVzs7QUFDWixJQUFNQyxFQUFFLEdBQUdILE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQUlJLE9BQU8sR0FBR0QsRUFBRSxDQUFDRSxZQUFILENBQWdCLHNCQUFoQixDQUFkO0FBQ0EsSUFBSUMsT0FBTyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0osT0FBWCxDQUFkOztJQUVNSyxjOzs7Ozs7OztpR0FFZUMsRyxFQUFNQyxHOzs7Ozs7Ozt1QkFFQVQsVzs7O0FBQWJVLGdCQUFBQSxJOzt1QkFDaUJBLElBQUksQ0FBQ0MsT0FBTCxHQUNwQkMsS0FEb0IsQ0FDZFIsT0FBTyxDQUFDUyxVQURNLEM7OztBQUFmQyxnQkFBQUEsTTtBQUVOTCxnQkFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNELE1BQU0sQ0FBQ0UsU0FBaEI7Ozs7Ozs7QUFFRlAsZ0JBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVg7QUFDQVIsZ0JBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLFlBQU1DLE9BQWY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0dBR2FYLEcsRUFBTUMsRzs7Ozs7Ozs7c0JBRWhCRCxHQUFHLENBQUNZLElBQUosQ0FBU0MsSUFBVCxJQUFpQixJQUFqQixJQUF5QmIsR0FBRyxDQUFDWSxJQUFKLENBQVNFLEtBQVQsSUFBa0IsSUFBM0MsSUFBbURkLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRyxRQUFULElBQXFCLEk7Ozs7Ozt1QkFDdER2QixXOzs7QUFBYlUsZ0JBQUFBLEk7O3VCQUNlQSxJQUFJLENBQUNDLE9BQUwsR0FDcEJhLEtBRG9CLENBQ2QsTUFEYyxFQUNQekIsR0FBRyxDQUFDMEIsT0FERyxFQUNPakIsR0FBRyxDQUFDWSxJQUFKLENBQVNDLElBRGhCLEVBRXBCRyxLQUZvQixDQUVkLE9BRmMsRUFFTnpCLEdBQUcsQ0FBQzBCLE9BRkUsRUFFUWpCLEdBQUcsQ0FBQ1ksSUFBSixDQUFTRSxLQUZqQixFQUdwQkUsS0FIb0IsQ0FHZCxVQUhjLEVBR0h6QixHQUFHLENBQUMwQixPQUhELEVBR1NqQixHQUFHLENBQUNZLElBQUosQ0FBU0csUUFIbEIsRUFJcEJYLEtBSm9CLENBSWRSLE9BQU8sQ0FBQ3NCLFVBSk0sQzs7O0FBQWZaLGdCQUFBQSxNO0FBS05MLGdCQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVDs7Ozs7QUFFQUwsZ0JBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLDhCQUFUOzs7Ozs7Ozs7QUFHRlQsZ0JBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVg7QUFDQVIsZ0JBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLGFBQU1DLE9BQWY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0dBR2FYLEcsRUFBTUMsRzs7Ozs7Ozs7c0JBRWhCRCxHQUFHLENBQUNZLElBQUosQ0FBU0csUUFBVCxJQUFxQixJQUFyQixJQUE2QmYsR0FBRyxDQUFDWSxJQUFKLENBQVNDLElBQVQsSUFBaUIsSTs7Ozs7O3VCQUM5QnJCLFc7OztBQUFiVSxnQkFBQUEsSTs7dUJBQ2lCQSxJQUFJLENBQUNDLE9BQUwsR0FDcEJhLEtBRG9CLENBQ2QsYUFEYyxFQUNBekIsR0FBRyxDQUFDMEIsT0FESixFQUNjakIsR0FBRyxDQUFDWSxJQUFKLENBQVNHLFFBRHZCLEVBRXBCQyxLQUZvQixDQUVkLFVBRmMsRUFFSHpCLEdBQUcsQ0FBQzBCLE9BRkQsRUFFU2pCLEdBQUcsQ0FBQ1ksSUFBSixDQUFTQyxJQUZsQixFQUdwQlQsS0FIb0IsQ0FHZFIsT0FBTyxDQUFDdUIsaUJBSE0sQzs7O0FBQWZiLGdCQUFBQSxNO0FBSU5MLGdCQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBU0QsTUFBVDs7Ozs7QUFFQUwsZ0JBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLDBCQUFUOzs7Ozs7Ozs7QUFHRlQsZ0JBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVg7QUFDQVIsZ0JBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLGFBQU1DLE9BQWY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0dBR2FYLEcsRUFBTUMsRzs7Ozs7Ozs7c0JBRWhCRCxHQUFHLENBQUNZLElBQUosQ0FBU0MsSUFBVCxJQUFpQixJOzs7Ozs7dUJBQ0NyQixXOzs7QUFBYlUsZ0JBQUFBLEk7O3VCQUNpQkEsSUFBSSxDQUFDQyxPQUFMLEdBQ3BCYSxLQURvQixDQUNkLFVBRGMsRUFDSHpCLEdBQUcsQ0FBQzBCLE9BREQsRUFDU2pCLEdBQUcsQ0FBQ1ksSUFBSixDQUFTQyxJQURsQixFQUVwQlQsS0FGb0IsQ0FFZFIsT0FBTyxDQUFDd0IsVUFGTSxDOzs7QUFBZmQsZ0JBQUFBLE07QUFHTkwsZ0JBQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxNQUFUOzs7OztBQUVBTCxnQkFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVMsOEJBQVQ7Ozs7Ozs7OztBQUdKVCxnQkFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWDtBQUNBUixnQkFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVMsYUFBTUMsT0FBZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS1IsSUFBTVUsVUFBVSxHQUFHLElBQUl0QixjQUFKLEVBQW5CO0FBQ0F1QixNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFVBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbHBcXERvY3VtZW50c1xcTk9ERV9ERVZcXG5vZGUtYXBpZ2l0XFxzYW1wbGUtQ1JVRC1TUUxcXGNvbnRyb2xsZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXHJcblxyXG5jb25zdCB7IHNxbCxwb29sUHJvbWlzZSB9ID0gcmVxdWlyZSgnLi4vZGF0YWJhc2UvZGInKVxyXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcbnZhciByYXdkYXRhID0gZnMucmVhZEZpbGVTeW5jKCcuL3F1ZXJ5L3F1ZXJpZXMuanNvbicpO1xyXG52YXIgcXVlcmllcyA9IEpTT04ucGFyc2UocmF3ZGF0YSk7XHJcblxyXG5jbGFzcyBNYWluQ29udHJvbGxlciB7XHJcblxyXG4gICAgYXN5bmMgZ2V0QWxsRGF0YShyZXEgLCByZXMpe1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHBvb2wgPSBhd2FpdCBwb29sUHJvbWlzZVxyXG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcG9vbC5yZXF1ZXN0KClcclxuICAgICAgICAgIC5xdWVyeShxdWVyaWVzLmdldEFsbERhdGEpXHJcbiAgICAgICAgICByZXMuanNvbihyZXN1bHQucmVjb3Jkc2V0KVxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKVxyXG4gICAgICAgIHJlcy5zZW5kKGVycm9yLm1lc3NhZ2UpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGFzeW5jIGFkZE5ld0RhdGEocmVxICwgcmVzKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBpZihyZXEuYm9keS5uYW1lICE9IG51bGwgJiYgcmVxLmJvZHkuZW1haWwgIT0gbnVsbCAmJiByZXEuYm9keS5wYXNzd29yZCAhPSBudWxsKSB7XHJcbiAgICAgICAgICBjb25zdCBwb29sID0gYXdhaXQgcG9vbFByb21pc2VcclxuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBvb2wucmVxdWVzdCgpXHJcbiAgICAgICAgICAuaW5wdXQoJ3VzZXInLHNxbC5WYXJDaGFyICwgcmVxLmJvZHkubmFtZSlcclxuICAgICAgICAgIC5pbnB1dCgnZW1haWwnLHNxbC5WYXJDaGFyICwgcmVxLmJvZHkuZW1haWwpXHJcbiAgICAgICAgICAuaW5wdXQoJ3Bhc3N3b3JkJyxzcWwuVmFyQ2hhcixyZXEuYm9keS5wYXNzd29yZClcclxuICAgICAgICAgIC5xdWVyeShxdWVyaWVzLmFkZE5ld1VzZXIpXHJcbiAgICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlcy5zZW5kKCdQbGVhc2UgZmlsbCBhbGwgdGhlIGRldGFpbHMhJylcclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApXHJcbiAgICAgICAgcmVzLnNlbmQoZXJyb3IubWVzc2FnZSlcclxuICAgIH1cclxuICAgIH1cclxuICAgIGFzeW5jIHVwZGF0ZURhdGEocmVxICwgcmVzKXtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBpZihyZXEuYm9keS5wYXNzd29yZCAhPSBudWxsICYmIHJlcS5ib2R5Lm5hbWUgIT0gbnVsbCkge1xyXG4gICAgICAgIGNvbnN0IHBvb2wgPSBhd2FpdCBwb29sUHJvbWlzZVxyXG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcG9vbC5yZXF1ZXN0KClcclxuICAgICAgICAgIC5pbnB1dCgnbmV3UGFzc3dvcmQnLHNxbC5WYXJDaGFyICwgcmVxLmJvZHkucGFzc3dvcmQpXHJcbiAgICAgICAgICAuaW5wdXQoJ3VzZXJOYW1lJyxzcWwuVmFyQ2hhcixyZXEuYm9keS5uYW1lKVxyXG4gICAgICAgICAgLnF1ZXJ5KHF1ZXJpZXMudXBkYXRlVXNlckRldGFpbHMpXHJcbiAgICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlcy5zZW5kKCdBbGwgZmllbGRzIGFyZSByZXF1aXJlZCEnKVxyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMClcclxuICAgICAgICByZXMuc2VuZChlcnJvci5tZXNzYWdlKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBhc3luYyBkZWxldGVEYXRhKHJlcSAsIHJlcyl7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgaWYocmVxLmJvZHkubmFtZSAhPSBudWxsICkge1xyXG4gICAgICAgICAgY29uc3QgcG9vbCA9IGF3YWl0IHBvb2xQcm9taXNlXHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBvb2wucmVxdWVzdCgpXHJcbiAgICAgICAgICAgIC5pbnB1dCgndXNlck5hbWUnLHNxbC5WYXJDaGFyLHJlcS5ib2R5Lm5hbWUpXHJcbiAgICAgICAgICAgIC5xdWVyeShxdWVyaWVzLmRlbGV0ZVVzZXIpXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHJlc3VsdClcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlcy5zZW5kKCdQbGVhc2UgZmlsbCBhbGwgdGhlIGRldGFpbHMhJylcclxuICAgICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMClcclxuICAgICAgICByZXMuc2VuZChlcnJvci5tZXNzYWdlKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgTWFpbkNvbnRyb2xsZXIoKVxyXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRyb2xsZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "require",
        "sql",
        "poolPromise",
        "fs",
        "rawdata",
        "readFileSync",
        "queries",
        "JSON",
        "parse",
        "MainController",
        "req",
        "res",
        "pool",
        "request",
        "query",
        "getAllData",
        "result",
        "json",
        "recordset",
        "status",
        "send",
        "message",
        "body",
        "name",
        "email",
        "password",
        "input",
        "VarChar",
        "addNewUser",
        "updateUserDetails",
        "deleteUser",
        "controller",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;;;eAE4BA,OAAO,CAAC,gBAAD,C;IAA3BC,G,YAAAA,G;IAAIC,W,YAAAA,W;;AACZ,IAAMC,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAII,OAAO,GAAGD,EAAE,CAACE,YAAH,CAAgB,sBAAhB,CAAd;AACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAd;;IAEMK,c;;;;;;;;iGAEeC,G,EAAMC,G;;;;;;;;uBAEAT,W;;;AAAbU,gBAAAA,I;;uBACiBA,IAAI,CAACC,OAAL,GACpBC,KADoB,CACdR,OAAO,CAACS,UADM,C;;;AAAfC,gBAAAA,M;AAENL,gBAAAA,GAAG,CAACM,IAAJ,CAASD,MAAM,CAACE,SAAhB;;;;;;;AAEFP,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX;AACAR,gBAAAA,GAAG,CAACS,IAAJ,CAAS,YAAMC,OAAf;;;;;;;;;;;;;;;;;;;kGAGaX,G,EAAMC,G;;;;;;;;sBAEhBD,GAAG,CAACY,IAAJ,CAASC,IAAT,IAAiB,IAAjB,IAAyBb,GAAG,CAACY,IAAJ,CAASE,KAAT,IAAkB,IAA3C,IAAmDd,GAAG,CAACY,IAAJ,CAASG,QAAT,IAAqB,I;;;;;;uBACtDvB,W;;;AAAbU,gBAAAA,I;;uBACeA,IAAI,CAACC,OAAL,GACpBa,KADoB,CACd,MADc,EACPzB,GAAG,CAAC0B,OADG,EACOjB,GAAG,CAACY,IAAJ,CAASC,IADhB,EAEpBG,KAFoB,CAEd,OAFc,EAENzB,GAAG,CAAC0B,OAFE,EAEQjB,GAAG,CAACY,IAAJ,CAASE,KAFjB,EAGpBE,KAHoB,CAGd,UAHc,EAGHzB,GAAG,CAAC0B,OAHD,EAGSjB,GAAG,CAACY,IAAJ,CAASG,QAHlB,EAIpBX,KAJoB,CAIdR,OAAO,CAACsB,UAJM,C;;;AAAfZ,gBAAAA,M;AAKNL,gBAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;;;;;AAEAL,gBAAAA,GAAG,CAACS,IAAJ,CAAS,8BAAT;;;;;;;;;AAGFT,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX;AACAR,gBAAAA,GAAG,CAACS,IAAJ,CAAS,aAAMC,OAAf;;;;;;;;;;;;;;;;;;;kGAGaX,G,EAAMC,G;;;;;;;;sBAEhBD,GAAG,CAACY,IAAJ,CAASG,QAAT,IAAqB,IAArB,IAA6Bf,GAAG,CAACY,IAAJ,CAASC,IAAT,IAAiB,I;;;;;;uBAC9BrB,W;;;AAAbU,gBAAAA,I;;uBACiBA,IAAI,CAACC,OAAL,GACpBa,KADoB,CACd,aADc,EACAzB,GAAG,CAAC0B,OADJ,EACcjB,GAAG,CAACY,IAAJ,CAASG,QADvB,EAEpBC,KAFoB,CAEd,UAFc,EAEHzB,GAAG,CAAC0B,OAFD,EAESjB,GAAG,CAACY,IAAJ,CAASC,IAFlB,EAGpBT,KAHoB,CAGdR,OAAO,CAACuB,iBAHM,C;;;AAAfb,gBAAAA,M;AAINL,gBAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;;;;;AAEAL,gBAAAA,GAAG,CAACS,IAAJ,CAAS,0BAAT;;;;;;;;;AAGFT,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX;AACAR,gBAAAA,GAAG,CAACS,IAAJ,CAAS,aAAMC,OAAf;;;;;;;;;;;;;;;;;;;kGAGaX,G,EAAMC,G;;;;;;;;sBAEhBD,GAAG,CAACY,IAAJ,CAASC,IAAT,IAAiB,I;;;;;;uBACCrB,W;;;AAAbU,gBAAAA,I;;uBACiBA,IAAI,CAACC,OAAL,GACpBa,KADoB,CACd,UADc,EACHzB,GAAG,CAAC0B,OADD,EACSjB,GAAG,CAACY,IAAJ,CAASC,IADlB,EAEpBT,KAFoB,CAEdR,OAAO,CAACwB,UAFM,C;;;AAAfd,gBAAAA,M;AAGNL,gBAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;;;;;AAEAL,gBAAAA,GAAG,CAACS,IAAJ,CAAS,8BAAT;;;;;;;;;AAGJT,gBAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX;AACAR,gBAAAA,GAAG,CAACS,IAAJ,CAAS,aAAMC,OAAf;;;;;;;;;;;;;;;;;;;;;AAKR,IAAMU,UAAU,GAAG,IAAItB,cAAJ,EAAnB;AACAuB,MAAM,CAACC,OAAP,GAAiBF,UAAjB",
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\controller\\",
      "sourcesContent": [
        "import express from 'express'\r\n\r\nconst { sql,poolPromise } = require('../database/db')\r\nconst fs = require('fs');\r\nvar rawdata = fs.readFileSync('./query/queries.json');\r\nvar queries = JSON.parse(rawdata);\r\n\r\nclass MainController {\r\n\r\n    async getAllData(req , res){\r\n      try {\r\n        const pool = await poolPromise\r\n          const result = await pool.request()\r\n          .query(queries.getAllData)\r\n          res.json(result.recordset)\r\n      } catch (error) {\r\n        res.status(500)\r\n        res.send(error.message)\r\n      }\r\n    }\r\n    async addNewData(req , res){\r\n      try {\r\n        if(req.body.name != null && req.body.email != null && req.body.password != null) {\r\n          const pool = await poolPromise\r\n          const result = await pool.request()\r\n          .input('user',sql.VarChar , req.body.name)\r\n          .input('email',sql.VarChar , req.body.email)\r\n          .input('password',sql.VarChar,req.body.password)\r\n          .query(queries.addNewUser)\r\n          res.json(result)\r\n        } else {\r\n          res.send('Please fill all the details!')\r\n        }\r\n      } catch (error) {\r\n        res.status(500)\r\n        res.send(error.message)\r\n    }\r\n    }\r\n    async updateData(req , res){\r\n      try {\r\n        if(req.body.password != null && req.body.name != null) {\r\n        const pool = await poolPromise\r\n          const result = await pool.request()\r\n          .input('newPassword',sql.VarChar , req.body.password)\r\n          .input('userName',sql.VarChar,req.body.name)\r\n          .query(queries.updateUserDetails)\r\n          res.json(result)\r\n        } else {\r\n          res.send('All fields are required!')\r\n        }\r\n      } catch (error) {\r\n        res.status(500)\r\n        res.send(error.message)\r\n      }\r\n    }\r\n    async deleteData(req , res){\r\n      try {\r\n        if(req.body.name != null ) {\r\n          const pool = await poolPromise\r\n            const result = await pool.request()\r\n            .input('userName',sql.VarChar,req.body.name)\r\n            .query(queries.deleteUser)\r\n            res.json(result)\r\n          } else {\r\n            res.send('Please fill all the details!')\r\n          }\r\n      } catch (error) {\r\n        res.status(500)\r\n        res.send(error.message)\r\n      }\r\n    }\r\n}\r\n\r\nconst controller = new MainController()\r\nmodule.exports = controller;"
      ]
    },
    "sourceType": "script",
    "mtime": 1607348453227
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"filename\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\database\\\\db.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"plugins\":[],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\db.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\db.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "const sql = require('mssql/msnodesqlv8');\n\nconst config = {\n  database: 'api_demo',\n  server: 'DESKTOP-51JVSDN',\n  driver: 'msnodesqlv8',\n  options: {\n    trustedConnection: true\n  }\n};\nconst poolPromise = new sql.ConnectionPool(config).connect().then(pool => {\n  console.log('Connected to MSSQL');\n  return pool;\n}).catch(err => console.log('Database Connection Failed! Bad Config: ', err));\nmodule.exports = {\n  sql,\n  poolPromise\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInNxbCIsInJlcXVpcmUiLCJjb25maWciLCJkYXRhYmFzZSIsInNlcnZlciIsImRyaXZlciIsIm9wdGlvbnMiLCJ0cnVzdGVkQ29ubmVjdGlvbiIsInBvb2xQcm9taXNlIiwiQ29ubmVjdGlvblBvb2wiLCJjb25uZWN0IiwidGhlbiIsInBvb2wiLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxtQkFBRCxDQUFuQjs7QUFFQSxNQUFNQyxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsUUFBUSxFQUFFLFVBREc7QUFFYkMsRUFBQUEsTUFBTSxFQUFFLGlCQUZLO0FBR2JDLEVBQUFBLE1BQU0sRUFBRSxhQUhLO0FBSWJDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxpQkFBaUIsRUFBRTtBQURaO0FBSkksQ0FBZjtBQVFBLE1BQU1DLFdBQVcsR0FBRyxJQUFJUixHQUFHLENBQUNTLGNBQVIsQ0FBdUJQLE1BQXZCLEVBQ2pCUSxPQURpQixHQUVqQkMsSUFGaUIsQ0FFWkMsSUFBSSxJQUFJO0FBQ1pDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaO0FBQ0EsU0FBT0YsSUFBUDtBQUNELENBTGlCLEVBTWpCRyxLQU5pQixDQU1YQyxHQUFHLElBQUlILE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDBDQUFaLEVBQXdERSxHQUF4RCxDQU5JLENBQXBCO0FBUUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmbEIsRUFBQUEsR0FEZTtBQUNWUSxFQUFBQTtBQURVLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcbHBcXERvY3VtZW50c1xcTk9ERV9ERVZcXG5vZGUtYXBpZ2l0XFxzYW1wbGUtQ1JVRC1TUUxcXGRhdGFiYXNlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcWwgPSByZXF1aXJlKCdtc3NxbC9tc25vZGVzcWx2OCcpXHJcblxyXG5jb25zdCBjb25maWcgPSB7XHJcbiAgZGF0YWJhc2U6ICdhcGlfZGVtbycsXHJcbiAgc2VydmVyOiAnREVTS1RPUC01MUpWU0ROJyxcclxuICBkcml2ZXI6ICdtc25vZGVzcWx2OCcsXHJcbiAgb3B0aW9uczoge1xyXG4gICAgdHJ1c3RlZENvbm5lY3Rpb246IHRydWVcclxuICB9XHJcbn0gXHJcbmNvbnN0IHBvb2xQcm9taXNlID0gbmV3IHNxbC5Db25uZWN0aW9uUG9vbChjb25maWcpXHJcbiAgLmNvbm5lY3QoKVxyXG4gIC50aGVuKHBvb2wgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBNU1NRTCcpXHJcbiAgICByZXR1cm4gcG9vbFxyXG4gIH0pXHJcbiAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZygnRGF0YWJhc2UgQ29ubmVjdGlvbiBGYWlsZWQhIEJhZCBDb25maWc6ICcsIGVycikpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBzcWwsIHBvb2xQcm9taXNlXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "sql",
        "require",
        "config",
        "database",
        "server",
        "driver",
        "options",
        "trustedConnection",
        "poolPromise",
        "ConnectionPool",
        "connect",
        "then",
        "pool",
        "console",
        "log",
        "catch",
        "err",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE,UADG;AAEbC,EAAAA,MAAM,EAAE,iBAFK;AAGbC,EAAAA,MAAM,EAAE,aAHK;AAIbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,iBAAiB,EAAE;AADZ;AAJI,CAAf;AAQA,MAAMC,WAAW,GAAG,IAAIR,GAAG,CAACS,cAAR,CAAuBP,MAAvB,EACjBQ,OADiB,GAEjBC,IAFiB,CAEZC,IAAI,IAAI;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAOF,IAAP;AACD,CALiB,EAMjBG,KANiB,CAMXC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDE,GAAxD,CANI,CAApB;AAQAC,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA,GADe;AACVQ,EAAAA;AADU,CAAjB",
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\",
      "sourcesContent": [
        "const sql = require('mssql/msnodesqlv8')\r\n\r\nconst config = {\r\n  database: 'api_demo',\r\n  server: 'DESKTOP-51JVSDN',\r\n  driver: 'msnodesqlv8',\r\n  options: {\r\n    trustedConnection: true\r\n  }\r\n} \r\nconst poolPromise = new sql.ConnectionPool(config)\r\n  .connect()\r\n  .then(pool => {\r\n    console.log('Connected to MSSQL')\r\n    return pool\r\n  })\r\n  .catch(err => console.log('Database Connection Failed! Bad Config: ', err))\r\n\r\nmodule.exports = {\r\n  sql, poolPromise\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1607158245019
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"filename\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser');\n\nvar cors = require('cors');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar morgan = require('morgan');\n\nvar router = require('./routes/route');\n\nvar app = express();\napp.use(cors());\n\nvar swaggerUi = require('swagger-ui-express'),\n    swaggerDocument = require('./swagger.json'); // parse application/x-www-form-urlencoded\n\n\napp.use(bodyParser.urlencoded({\n  extended: false\n})); // parse application/json\n\napp.use(bodyParser.json());\napp.use(morgan('dev')); // create a write stream (in append mode)\n\nvar accessLogStream = fs.createWriteStream(path.join(__dirname, '/logs/access.log'), {\n  flags: 'a'\n}); // setup the logger\n\napp.use(morgan('combined', {\n  stream: accessLogStream\n}));\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\napp.use(router);\nvar port = 3000;\napp.listen(process.env.PORT || port, function (err) {\n  if (err) console.log('Unable to start the server!');else console.log('Server started running on : ' + port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJjb3JzIiwiZnMiLCJwYXRoIiwibW9yZ2FuIiwicm91dGVyIiwiYXBwIiwidXNlIiwic3dhZ2dlclVpIiwic3dhZ2dlckRvY3VtZW50IiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImFjY2Vzc0xvZ1N0cmVhbSIsImNyZWF0ZVdyaXRlU3RyZWFtIiwiam9pbiIsIl9fZGlybmFtZSIsImZsYWdzIiwic3RyZWFtIiwic2VydmUiLCJzZXR1cCIsInBvcnQiLCJsaXN0ZW4iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUcsRUFBRSxHQUFHSCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxJQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1LLE1BQU0sR0FBR0wsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsSUFBTU0sTUFBTSxHQUFHTixPQUFPLENBQUMsZ0JBQUQsQ0FBdEI7O0FBQ0EsSUFBTU8sR0FBRyxHQUFHUixPQUFPLEVBQW5CO0FBRUFRLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTixJQUFJLEVBQVo7O0FBRUEsSUFBTU8sU0FBUyxHQUFHVCxPQUFPLENBQUMsb0JBQUQsQ0FBekI7QUFBQSxJQUNBVSxlQUFlLEdBQUdWLE9BQU8sQ0FBQyxnQkFBRCxDQUR6QixDLENBS0E7OztBQUNBTyxHQUFHLENBQUNDLEdBQUosQ0FBUVAsVUFBVSxDQUFDVSxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVIsRSxDQUVBOztBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUVAsVUFBVSxDQUFDWSxJQUFYLEVBQVI7QUFFQU4sR0FBRyxDQUFDQyxHQUFKLENBQVFILE1BQU0sQ0FBQyxLQUFELENBQWQsRSxDQUVBOztBQUNBLElBQUlTLGVBQWUsR0FBR1gsRUFBRSxDQUFDWSxpQkFBSCxDQUFxQlgsSUFBSSxDQUFDWSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsa0JBQXJCLENBQXJCLEVBQStEO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQS9ELENBQXRCLEMsQ0FFQTs7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVFILE1BQU0sQ0FBQyxVQUFELEVBQWE7QUFBRWMsRUFBQUEsTUFBTSxFQUFFTDtBQUFWLENBQWIsQ0FBZDtBQUNBUCxHQUFHLENBQUNDLEdBQUosQ0FBUSxXQUFSLEVBQXFCQyxTQUFTLENBQUNXLEtBQS9CLEVBQXNDWCxTQUFTLENBQUNZLEtBQVYsQ0FBZ0JYLGVBQWhCLENBQXRDO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRRixNQUFSO0FBRUEsSUFBTWdCLElBQUksR0FBRyxJQUFiO0FBRUFmLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0JKLElBQS9CLEVBQXNDLFVBQUNLLEdBQUQsRUFBUztBQUM3QyxNQUFHQSxHQUFILEVBQ0ZDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDZCQUFaLEVBREUsS0FHRkQsT0FBTyxDQUFDQyxHQUFSLENBQVksaUNBQWlDUCxJQUE3QztBQUNDLENBTEQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxscFxcRG9jdW1lbnRzXFxOT0RFX0RFVlxcbm9kZS1hcGlnaXRcXHNhbXBsZS1DUlVELVNRTFxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxyXG5cclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJylcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKVxyXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJylcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxyXG5jb25zdCBtb3JnYW4gPSByZXF1aXJlKCdtb3JnYW4nKVxyXG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy9yb3V0ZScpXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxyXG5cclxuYXBwLnVzZShjb3JzKCkpXHJcblxyXG5jb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKCdzd2FnZ2VyLXVpLWV4cHJlc3MnKSxcclxuc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZSgnLi9zd2FnZ2VyLmpzb24nKTtcclxuXHJcblxyXG5cclxuLy8gcGFyc2UgYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKVxyXG5cclxuLy8gcGFyc2UgYXBwbGljYXRpb24vanNvblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxyXG5cclxuYXBwLnVzZShtb3JnYW4oJ2RldicpKVxyXG5cclxuLy8gY3JlYXRlIGEgd3JpdGUgc3RyZWFtIChpbiBhcHBlbmQgbW9kZSlcclxudmFyIGFjY2Vzc0xvZ1N0cmVhbSA9IGZzLmNyZWF0ZVdyaXRlU3RyZWFtKHBhdGguam9pbihfX2Rpcm5hbWUsICcvbG9ncy9hY2Nlc3MubG9nJyksIHsgZmxhZ3M6ICdhJyB9KVxyXG4gXHJcbi8vIHNldHVwIHRoZSBsb2dnZXJcclxuYXBwLnVzZShtb3JnYW4oJ2NvbWJpbmVkJywgeyBzdHJlYW06IGFjY2Vzc0xvZ1N0cmVhbSB9KSlcclxuYXBwLnVzZSgnL2FwaS1kb2NzJywgc3dhZ2dlclVpLnNlcnZlLCBzd2FnZ2VyVWkuc2V0dXAoc3dhZ2dlckRvY3VtZW50KSk7XHJcbmFwcC51c2Uocm91dGVyKVxyXG5cclxuY29uc3QgcG9ydCA9IDMwMDBcclxuXHJcbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCB8fCBwb3J0ICwgKGVycikgPT4ge1xyXG4gIGlmKGVycilcclxuY29uc29sZS5sb2coJ1VuYWJsZSB0byBzdGFydCB0aGUgc2VydmVyIScpXHJcbmVsc2VcclxuY29uc29sZS5sb2coJ1NlcnZlciBzdGFydGVkIHJ1bm5pbmcgb24gOiAnICsgcG9ydClcclxufSlcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "cors",
        "fs",
        "path",
        "morgan",
        "router",
        "app",
        "use",
        "swaggerUi",
        "swaggerDocument",
        "urlencoded",
        "extended",
        "json",
        "accessLogStream",
        "createWriteStream",
        "join",
        "__dirname",
        "flags",
        "stream",
        "serve",
        "setup",
        "port",
        "listen",
        "process",
        "env",
        "PORT",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMO,GAAG,GAAGR,OAAO,EAAnB;AAEAQ,GAAG,CAACC,GAAJ,CAAQN,IAAI,EAAZ;;AAEA,IAAMO,SAAS,GAAGT,OAAO,CAAC,oBAAD,CAAzB;AAAA,IACAU,eAAe,GAAGV,OAAO,CAAC,gBAAD,CADzB,C,CAKA;;;AACAO,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACU,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAL,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACY,IAAX,EAAR;AAEAN,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,KAAD,CAAd,E,CAEA;;AACA,IAAIS,eAAe,GAAGX,EAAE,CAACY,iBAAH,CAAqBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,kBAArB,CAArB,EAA+D;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA/D,CAAtB,C,CAEA;;AACAX,GAAG,CAACC,GAAJ,CAAQH,MAAM,CAAC,UAAD,EAAa;AAAEc,EAAAA,MAAM,EAAEL;AAAV,CAAb,CAAd;AACAP,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBC,SAAS,CAACW,KAA/B,EAAsCX,SAAS,CAACY,KAAV,CAAgBX,eAAhB,CAAtC;AACAH,GAAG,CAACC,GAAJ,CAAQF,MAAR;AAEA,IAAMgB,IAAI,GAAG,IAAb;AAEAf,GAAG,CAACgB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBJ,IAA/B,EAAsC,UAACK,GAAD,EAAS;AAC7C,MAAGA,GAAH,EACFC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EADE,KAGFD,OAAO,CAACC,GAAR,CAAY,iCAAiCP,IAA7C;AACC,CALD",
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\",
      "sourcesContent": [
        "const express = require('express')\r\n\r\nconst bodyParser = require('body-parser')\r\nconst cors = require('cors')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\nconst morgan = require('morgan')\r\nconst router = require('./routes/route')\r\nconst app = express()\r\n\r\napp.use(cors())\r\n\r\nconst swaggerUi = require('swagger-ui-express'),\r\nswaggerDocument = require('./swagger.json');\r\n\r\n\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// parse application/json\r\napp.use(bodyParser.json())\r\n\r\napp.use(morgan('dev'))\r\n\r\n// create a write stream (in append mode)\r\nvar accessLogStream = fs.createWriteStream(path.join(__dirname, '/logs/access.log'), { flags: 'a' })\r\n \r\n// setup the logger\r\napp.use(morgan('combined', { stream: accessLogStream }))\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\r\napp.use(router)\r\n\r\nconst port = 3000\r\n\r\napp.listen(process.env.PORT || port , (err) => {\r\n  if(err)\r\nconsole.log('Unable to start the server!')\r\nelse\r\nconsole.log('Server started running on : ' + port)\r\n})\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1607348053955
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"filename\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\routes\\\\route.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\route.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\route.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\",
        "sourceFileName": "route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar controller = require('../controller/controller');\n\nvar router = express.Router();\nrouter.get('/api/getAllData', controller.getAllData);\nrouter.post('/api/addNewData', controller.addNewData);\nrouter.put('/api/updateData', controller.updateData);\nrouter[\"delete\"]('/api/deleteData', controller.deleteData);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY29udHJvbGxlciIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImdldEFsbERhdGEiLCJwb3N0IiwiYWRkTmV3RGF0YSIsInB1dCIsInVwZGF0ZURhdGEiLCJkZWxldGVEYXRhIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUlDLE9BQU8sQ0FBQyxTQUFELENBQXhCOztBQUNBLElBQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLDBCQUFELENBQTFCOztBQUVBLElBQU1FLE1BQU0sR0FBR0gsT0FBTyxDQUFDSSxNQUFSLEVBQWY7QUFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsaUJBQVgsRUFBOEJILFVBQVUsQ0FBQ0ksVUFBekM7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksaUJBQVosRUFBZ0NMLFVBQVUsQ0FBQ00sVUFBM0M7QUFDQUwsTUFBTSxDQUFDTSxHQUFQLENBQVcsaUJBQVgsRUFBNkJQLFVBQVUsQ0FBQ1EsVUFBeEM7QUFDQVAsTUFBTSxVQUFOLENBQWMsaUJBQWQsRUFBa0NELFVBQVUsQ0FBQ1MsVUFBN0M7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVixNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxwXFxEb2N1bWVudHNcXE5PREVfREVWXFxub2RlLWFwaWdpdFxcc2FtcGxlLUNSVUQtU1FMXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSAgcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBjb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlci9jb250cm9sbGVyJylcclxuXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcbnJvdXRlci5nZXQoJy9hcGkvZ2V0QWxsRGF0YScsIGNvbnRyb2xsZXIuZ2V0QWxsRGF0YSk7XHJcbnJvdXRlci5wb3N0KCcvYXBpL2FkZE5ld0RhdGEnICwgY29udHJvbGxlci5hZGROZXdEYXRhKTtcclxucm91dGVyLnB1dCgnL2FwaS91cGRhdGVEYXRhJyxjb250cm9sbGVyLnVwZGF0ZURhdGEpO1xyXG5yb3V0ZXIuZGVsZXRlKCcvYXBpL2RlbGV0ZURhdGEnICwgY29udHJvbGxlci5kZWxldGVEYXRhKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "route.js"
      ],
      "names": [
        "express",
        "require",
        "controller",
        "router",
        "Router",
        "get",
        "getAllData",
        "post",
        "addNewData",
        "put",
        "updateData",
        "deleteData",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAIC,OAAO,CAAC,SAAD,CAAxB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,0BAAD,CAA1B;;AAEA,IAAME,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf;AACAD,MAAM,CAACE,GAAP,CAAW,iBAAX,EAA8BH,UAAU,CAACI,UAAzC;AACAH,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAAgCL,UAAU,CAACM,UAA3C;AACAL,MAAM,CAACM,GAAP,CAAW,iBAAX,EAA6BP,UAAU,CAACQ,UAAxC;AACAP,MAAM,UAAN,CAAc,iBAAd,EAAkCD,UAAU,CAACS,UAA7C;AAEAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\routes\\",
      "sourcesContent": [
        "const express =  require('express');\r\nconst controller = require('../controller/controller')\r\n\r\nconst router = express.Router();\r\nrouter.get('/api/getAllData', controller.getAllData);\r\nrouter.post('/api/addNewData' , controller.addNewData);\r\nrouter.put('/api/updateData',controller.updateData);\r\nrouter.delete('/api/deleteData' , controller.deleteData);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1607157707593
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"filename\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\\\\database\\\\db.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\lp\\\\Documents\\\\NODE_DEV\\\\node-apigit\\\\sample-CRUD-SQL\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\db.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar sql = require('mssql/msnodesqlv8');\n\nvar config = {\n  database: 'api_demo',\n  server: 'DESKTOP-51JVSDN',\n  driver: 'msnodesqlv8',\n  options: {\n    trustedConnection: true\n  }\n};\nvar poolPromise = new sql.ConnectionPool(config).connect().then(function (pool) {\n  console.log('Connected to MSSQL');\n  return pool;\n})[\"catch\"](function (err) {\n  return console.log('Database Connection Failed! Bad Config: ', err);\n});\nmodule.exports = {\n  sql: sql,\n  poolPromise: poolPromise\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInNxbCIsInJlcXVpcmUiLCJjb25maWciLCJkYXRhYmFzZSIsInNlcnZlciIsImRyaXZlciIsIm9wdGlvbnMiLCJ0cnVzdGVkQ29ubmVjdGlvbiIsInBvb2xQcm9taXNlIiwiQ29ubmVjdGlvblBvb2wiLCJjb25uZWN0IiwidGhlbiIsInBvb2wiLCJjb25zb2xlIiwibG9nIiwiZXJyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxtQkFBRCxDQUFuQjs7QUFFQSxJQUFNQyxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsUUFBUSxFQUFFLFVBREc7QUFFYkMsRUFBQUEsTUFBTSxFQUFFLGlCQUZLO0FBR2JDLEVBQUFBLE1BQU0sRUFBRSxhQUhLO0FBSWJDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxpQkFBaUIsRUFBRTtBQURaO0FBSkksQ0FBZjtBQVFBLElBQU1DLFdBQVcsR0FBRyxJQUFJUixHQUFHLENBQUNTLGNBQVIsQ0FBdUJQLE1BQXZCLEVBQ2pCUSxPQURpQixHQUVqQkMsSUFGaUIsQ0FFWixVQUFBQyxJQUFJLEVBQUk7QUFDWkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVo7QUFDQSxTQUFPRixJQUFQO0FBQ0QsQ0FMaUIsV0FNWCxVQUFBRyxHQUFHO0FBQUEsU0FBSUYsT0FBTyxDQUFDQyxHQUFSLENBQVksMENBQVosRUFBd0RDLEdBQXhELENBQUo7QUFBQSxDQU5RLENBQXBCO0FBUUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakIsRUFBQUEsR0FBRyxFQUFIQSxHQURlO0FBQ1ZRLEVBQUFBLFdBQVcsRUFBWEE7QUFEVSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGxwXFxEb2N1bWVudHNcXE5PREVfREVWXFxub2RlLWFwaWdpdFxcc2FtcGxlLUNSVUQtU1FMXFxkYXRhYmFzZVxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc3FsID0gcmVxdWlyZSgnbXNzcWwvbXNub2Rlc3FsdjgnKVxyXG5cclxuY29uc3QgY29uZmlnID0ge1xyXG4gIGRhdGFiYXNlOiAnYXBpX2RlbW8nLFxyXG4gIHNlcnZlcjogJ0RFU0tUT1AtNTFKVlNETicsXHJcbiAgZHJpdmVyOiAnbXNub2Rlc3FsdjgnLFxyXG4gIG9wdGlvbnM6IHtcclxuICAgIHRydXN0ZWRDb25uZWN0aW9uOiB0cnVlXHJcbiAgfVxyXG59IFxyXG5jb25zdCBwb29sUHJvbWlzZSA9IG5ldyBzcWwuQ29ubmVjdGlvblBvb2woY29uZmlnKVxyXG4gIC5jb25uZWN0KClcclxuICAudGhlbihwb29sID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gTVNTUUwnKVxyXG4gICAgcmV0dXJuIHBvb2xcclxuICB9KVxyXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coJ0RhdGFiYXNlIENvbm5lY3Rpb24gRmFpbGVkISBCYWQgQ29uZmlnOiAnLCBlcnIpKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgc3FsLCBwb29sUHJvbWlzZVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "sql",
        "require",
        "config",
        "database",
        "server",
        "driver",
        "options",
        "trustedConnection",
        "poolPromise",
        "ConnectionPool",
        "connect",
        "then",
        "pool",
        "console",
        "log",
        "err",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE,UADG;AAEbC,EAAAA,MAAM,EAAE,iBAFK;AAGbC,EAAAA,MAAM,EAAE,aAHK;AAIbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,iBAAiB,EAAE;AADZ;AAJI,CAAf;AAQA,IAAMC,WAAW,GAAG,IAAIR,GAAG,CAACS,cAAR,CAAuBP,MAAvB,EACjBQ,OADiB,GAEjBC,IAFiB,CAEZ,UAAAC,IAAI,EAAI;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAOF,IAAP;AACD,CALiB,WAMX,UAAAG,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDC,GAAxD,CAAJ;AAAA,CANQ,CAApB;AAQAC,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,GAAG,EAAHA,GADe;AACVQ,EAAAA,WAAW,EAAXA;AADU,CAAjB",
      "sourceRoot": "C:\\Users\\lp\\Documents\\NODE_DEV\\node-apigit\\sample-CRUD-SQL\\database\\",
      "sourcesContent": [
        "const sql = require('mssql/msnodesqlv8')\r\n\r\nconst config = {\r\n  database: 'api_demo',\r\n  server: 'DESKTOP-51JVSDN',\r\n  driver: 'msnodesqlv8',\r\n  options: {\r\n    trustedConnection: true\r\n  }\r\n} \r\nconst poolPromise = new sql.ConnectionPool(config)\r\n  .connect()\r\n  .then(pool => {\r\n    console.log('Connected to MSSQL')\r\n    return pool\r\n  })\r\n  .catch(err => console.log('Database Connection Failed! Bad Config: ', err))\r\n\r\nmodule.exports = {\r\n  sql, poolPromise\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1607158245019
  }
}